//v1.0

$animation-duration : $transition-duration*2;
$animation-delay    : $transition-duration/6;

@mixin lib-animation{

  [when-visible],[animation],[delay],[easing]{ visibility: hidden }

  @each $name, $properties in $animations{
    [data-animation="#{$name}"]{
      animation: $name $animation-duration $ease-out-cubic both;
      will-change: unquote($properties); backface-visibility: hidden;
    }
    @media #{$media-tablet} {
      [data-tablet-animation="#{$name}"]{ animation-name: #{$name}; will-change: unquote($properties) }
    }
    @media #{$media-mobile} {
      [data-mobile-animation="#{$name}"]{ animation-name: #{$name}; will-change: unquote($properties) }
    }
  }

  @for $i from 0 through 35{
    [data-delay="#{$i}"]{ animation-delay: $animation-delay*$i }
    @media #{$media-tablet} {
      [data-tablet-delay="#{$i}"]{ animation-delay: $animation-delay*$i }
    }
    @media #{$media-mobile} {
      [data-mobile-delay="#{$i}"]{ animation-delay: $animation-delay*$i }
    }
  }

  @each $name, $easing in $easings{
    [data-easing="#{$name}"]{ animation-timing-function: $easing }
    @media #{$media-tablet} {
      [data-tablet-easing="#{$name}"]{ animation-timing-function: $easing }
    }
    @media #{$media-mobile} {
      [data-mobile-easing="#{$name}"]{ animation-timing-function: $easing }
    }
  }
}


@if( index($libraries, 'animation') ){
  @include lib-animation;
}