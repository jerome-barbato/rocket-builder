@mixin on-hover($transition, $param1:false, $param2:false, $param3:false, $param4:false) {

  @if( $transition == "color") {
    @include hover--color($param1);
  }

  @if( $transition == "bg-color") {
    @include hover--bg-color($param1);
  }

  @if( $transition == "border-color") {
    @include hover--border-color($param1);
  }

  @if( $transition == "switch-color") {
    @include hover--switch-color($param1, $param2);
  }

  @if( $transition == "padding-left") {
    @include hover--padding-left($param1);
  }

  @if( $transition == "focus") {
    @include hover--focus($param1, $param2, $param3);
  }

  @if( $transition == "fill") {
    @include hover--fill($param1, $param2);
  }

  @if( $transition == "transformer") {
    @include hover--transformer($param1, $param2);
  }
}






@mixin hover--color($color) {
  transition: allow( color, $transition-duration );

  .desktop &:hover { color: $color }
}






@mixin hover--bg-color($color) {
  transition: allow( background-color, $transition-duration );

  .desktop &:hover { background-color: $color }
}






@mixin hover--border-color($color) {
  transition: allow( border, $transition-duration );

  .desktop &:hover { border-color: $color }
}






@mixin hover--switch-color($bg-color, $color) {
  transition: allow( background-color color, $transition-duration );

  .desktop &:hover {
    background-color: $bg-color;
    color: $color;
  }
}






@mixin hover--padding-left($size) {
  transition: allow( padding, $transition-duration );

  .desktop &:hover { padding-left: $size }
}






@mixin hover--focus($color, $border-size, $border-radius) {
  transition: allow( background color );
  position: relative;

  &:after {
    content: ''; position: overlay(); border: $border-size solid $color;
    top: -$border-size; left: -$border-size; opacity: 0; transform: scale(1.1, 1.4);
    transition: allow( transform opacity ); border-radius: $border-radius;
  }

  .desktop &:hover {
    background: transparent; color: $color;
    &:after{ opacity: 1; transform: none }
  }
}






@mixin hover--fill($bg-color, $color, $border-color:false) {

  position: relative; z-index: 1;
  transition: allow( border-color color );
  
  &:after {
    content: ''; transition: allow( transform );
    transform-origin: center bottom; position: overlay(); z-index: -1;
    background-color: $bg-color; transform: scale(1,0);
  }

  .desktop &:hover {
    border-color: $bg-color;
    color: $color;
    &:after { transform: none }
  }
}






@mixin hover--transformer($bg-color, $color) {
  position: relative;
  transition: allow( color background, $transition-duration*1.5 );
  transition-delay: $transition-duration/2;

  &:after, &:before {
    content: ''; transition: allow( border-color transform , $transition-duration*2 );
    transform-origin: center bottom; position: overlay(); transform: scale(0);
  }

  &:after {
    border-top: 1px solid;
    border-left: 1px solid;
    transform-origin: 0 0;
  }

  &:before {
    border-bottom: 1px solid;
    border-right: 1px solid;
    transform-origin: 100% 100%;
  }

  .desktop &:hover {
    color: $color;
    background: $bg-color;
    transition-delay: 0s;
    
    &:after, &:before { transform: none }
  }
}