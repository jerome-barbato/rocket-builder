$grid-space: 0 !default;
$grid-margin : 0 $grid-space !default;
$grid-col-padding : 0 $grid-space !default;
$grid-row-margin : $grid-space*2 !default;
$grid-row-padding: false !default;

//$grid-breakpoints : desktop, wide, 13inch, tablet, tablet-portrait, mobile;
$grid-breakpoints : false !default;
$grid-phone-breakpoint : $media-phone !default;
$grid-flex : false !default;
$grid-table : true !default;
$grid-col-count : 12 !default;

@mixin lib-grid {

  [data-grid], %grid {
    display: block; @include clearfix();
    @if ($grid-margin) { & + & { margin: $grid-margin } }
  }

  @if( $grid-flex ){
    [data-grid="flex"] {
      [data-row] { display: flex; flex: 0 1 auto; flex-direction: row; flex-wrap: wrap }
      [data-row="top"]{ align-items: flex-start }
      [data-row="center"]{ align-items: center }
      [data-row="bottom"]{ align-items: flex-end }
      [data-col]{ flex-grow: 1; flex-basis: 0; float: none }
      @for $j from 1 through $grid-col-count{
        @for $i from 2 through $grid-col-count{
          @if $j < $i{
            [data-col="#{$j}/#{$i}"] { flex-basis: ((100%*$j)/$i) }
            @if($grid-breakpoints){
              @each $grid-breakpoint in $grid-breakpoints{
                $media-query : map_get($media-queries, $grid-breakpoint);
                @media #{$media-query} { [data-col-#{$grid-breakpoint}="#{$j}/#{$i}"] { flex-basis: ((100%*$j)/$i) } }
              }
            }
          }
        }
      }
    }
  }

  @if( $grid-table ){
    [data-grid="table"] {
      display: table; width: 100%; height: 100%; table-layout: fixed;
      &:after{ display: none }
      @media #{$grid-phone-breakpoint} { display: block }
      [data-row] {
        display: table-row;
        @media #{$grid-phone-breakpoint} { display: block }
      }
      [data-col]{
        display: table-cell; height: 100%; float: none; vertical-align: top;
        @media #{$grid-phone-breakpoint} { display: block }
      }
      [data-align="top"] { vertical-align: top }
      [data-align="middle"] { vertical-align: middle }
      [data-align="bottom"] { vertical-align: bottom }
    }
  }

  [data-row], %row{
    @include clearfix(); display: block; position: relative;
    @if ($grid-row-padding) { padding: $grid-row-padding }
    @if ($grid-row-margin) { & + & { margin-top: $grid-row-margin } }
  }

  [data-col], %column {
    &:empty:after{ content:'\00a0' }
    float: left; width: 100%; border-collapse: collapse; display: block; position: relative;
    @media #{$grid-phone-breakpoint} {
      width: 100%; float: none;
      &:empty{ display: none }
    }
    @if ($grid-col-padding) { padding: $grid-col-padding }
  }

  [data-col="0"]{ padding: 0; float: none }
  [data-col="auto"]{ width: auto }

  @for $j from 1 through $grid-col-count {
    @for $i from 1 through $grid-col-count {
      @if $j <= $i{
        [data-col="#{$j}/#{$i}"] { width: ((100%*$j)/$i) }
        @if($grid-breakpoints){
          @each $grid-breakpoint in $grid-breakpoints{
            $media-query : map_get($media-queries, $grid-breakpoint);
            @media #{$media-query} { [data-col-#{$grid-breakpoint}="#{$j}/#{$i}"] { width: ((100%*$j)/$i) } }
          }
        }
      }
    }
  }
}

@mixin grid($mod: false) {
  @if( $mod ){
    [data-grid="#{$mod}"]{ @content; }
  } @else {
    [data-grid]{ @content; }
  }
}

@mixin column($mod: false) {
  @if( $mod ){
    [data-col="#{$mod}"]{ @content; }
  } @else {
    [data-col]{ @content; }
  }
}

@mixin row($mod: false) {
  @if( $mod ){
    [data-row="#{$mod}"]{ @content; }
  } @else {
    [data-row]{ @content; }
  }
}

@mixin break-grid() { width: 100%; float: none }

@if (variable-exists(libraries) and  index($libraries, 'grid')) {
  @include lib-grid
}
