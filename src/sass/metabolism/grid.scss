$grid-default-space : 0 !default;

$grid-margin : 0 $grid-default-space !default;
$grid-col-padding : 0 $grid-default-space !default;
$grid-row-margin : $grid-default-space*2 !default;
$grid-breakpoint : $media-mobile !default;
$grid-flex : false !default;
$grid-table : true !default;
$grid-col-count : 12 !default;

@mixin lib-grid {

  [data-grid] {
    display: block; @include clearfix();
    @if variable-exists(grid-margin) { & + & { margin-top: $grid-margin } }
  }

  @if( $grid-flex ){
    [data-grid="flex"] {
      [data-row] { display: flex; flex: 0 1 auto; flex-direction: row; flex-wrap: wrap }
      [data-row="top"]{ align-items: flex-start }
      [data-row="center"]{ align-items: center }
      [data-row="bottom"]{ align-items: flex-end }
      [data-column]{ flex-grow: 1; flex-basis: 0; float: none }
      @for $j from 1 through $grid-col-count{
        @for $i from 2 through $grid-col-count{
          @if $j < $i{ [data-column="#{$j}/#{$i}"] { flex-basis: ((100%*$j)/$i) } }
        }
      }
    }
  }

  @if( $grid-table ){
    [data-grid="table"] {
      display: table; width: 100%; height: 100%;
      &:after{ display: none }
      @media #{$grid-breakpoint} { display: block }
      [data-row] {
        display: table-row; height: 100%;
        @media #{$grid-breakpoint} { display: block }
      }
      [data-column]{
        display: table-cell; height: 100%; float: none; vertical-align: top;
        @media #{$grid-breakpoint} { display: block }
      }
      [data-column="top"] { vertical-align: top }
      [data-column="center"] { vertical-align: middle }
      [data-column="bottom"] { vertical-align: bottom }
    }
  }

  [data-row]{
    @include clearfix(); display: block; position: relative;
    @if variable-exists(grid-row-padding) { padding: $grid-row-padding; }
    @if variable-exists(grid-row-margin) { & + & { margin-top: $grid-row-margin; } }
  }

  [data-column] {
    &:empty:after{ content:'\00a0' }
    float: left; width: 100%; border-collapse: collapse; display: block; position: relative;
    @media #{$grid-breakpoint} {
      width: 100%; float: none;
      &:empty{ display: none }
    }
    @if variable-exists(grid-col-padding) { padding: $grid-col-padding }
  }

  @for $j from 1 through $grid-col-count {
    @for $i from 2 through $grid-col-count {
      @if $j < $i{ [data-column="#{$j}/#{$i}"] { width: ((100%*$j)/$i) } }
    }
  }
}

@mixin grid($mod: false) {
  @if( $mod ){
    [data-grid="#{$mod}"]{ @content; }
  } @else {
    [data-grid]{ @content; }
  }
}

@mixin column($mod: false) {
  @if( $mod ){
    [data-column="#{$mod}"]{ @content; }
  } @else {
    [data-column]{ @content; }
  }
}

@mixin row($mod: false) {
  @if( $mod ){
    [data-row="#{$mod}"]{ @content; }
  } @else {
    [data-row]{ @content; }
  }
}

@mixin break-grid() { width: 100%; float: none }

@if( index($libraries, 'grid') ) { @include lib-grid }
